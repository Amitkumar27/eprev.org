/*---
type: system
pathname: /index.json
---*/
/// <reference path="../types/templates.d.ts" />

const stopWords = read('../source/stop-words.txt')
  .split(',')
  .reduce((h, w) => ((h[w] = true), h), {});

function vectorize(text) {
  return (tokens = text
    .replace(/â€™/g, "'")
    .split(/[^A-Za-z0-9'-]+/)
    .map(t => t.toLowerCase().replace(/['-]/g, ''))
    .filter(t => t.length > 1 && !stopWords[t])
    .reduce((m, t) => (m[t] ? m[t]++ : (m[t] = 1), m), {}));
}

template(({ site }) => {
  const dateFormat = require('../lib/date-format');

  const documents = site.byType('post').map(post => {
    const text = post.__source__
      .replace(/https?:\/\/[^\s]*/g, '') // Ignore URLs
      .replace(/<!--:[^>]*-->/g, ''); // Ignore markdown attributes

    return {
      title: post.title,
      url: post.pathname,
      date: dateFormat(post.date, '%MM D, YYYY'),
      tokens: vectorize(`${post.title}. ${text}`),
    };
  });

  return html`
    ${stringify(documents)}
  `;
});

// vim: ft=typescript
